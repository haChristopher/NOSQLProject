{"version":3,"sources":["/Users/christopher/Uni/NOSQL/NOSQLProject/client/src/$_gendir lazy","/Users/christopher/Uni/NOSQL/NOSQLProject/client/src/app/app.module.ts","/Users/christopher/Uni/NOSQL/NOSQLProject/client/src/app/app.route.ts","/Users/christopher/Uni/NOSQL/NOSQLProject/client/src/app/components/app.component.html","/Users/christopher/Uni/NOSQL/NOSQLProject/client/src/app/components/app.component.ts","/Users/christopher/Uni/NOSQL/NOSQLProject/client/src/app/components/chatroom/chatroom.component.css","/Users/christopher/Uni/NOSQL/NOSQLProject/client/src/app/components/chatroom/chatroom.component.html","/Users/christopher/Uni/NOSQL/NOSQLProject/client/src/app/components/chatroom/chatroom.component.ts","/Users/christopher/Uni/NOSQL/NOSQLProject/client/src/app/components/home/home.component.css","/Users/christopher/Uni/NOSQL/NOSQLProject/client/src/app/components/home/home.component.html","/Users/christopher/Uni/NOSQL/NOSQLProject/client/src/app/components/home/home.component.ts","/Users/christopher/Uni/NOSQL/NOSQLProject/client/src/app/components/login/login.component.css","/Users/christopher/Uni/NOSQL/NOSQLProject/client/src/app/components/login/login.component.html","/Users/christopher/Uni/NOSQL/NOSQLProject/client/src/app/components/login/login.component.ts","/Users/christopher/Uni/NOSQL/NOSQLProject/client/src/app/components/modals/create-channel.component.html","/Users/christopher/Uni/NOSQL/NOSQLProject/client/src/app/components/modals/create-channel.component.ts","/Users/christopher/Uni/NOSQL/NOSQLProject/client/src/app/components/modals/modal.component.css","/Users/christopher/Uni/NOSQL/NOSQLProject/client/src/app/components/register/register.component.css","/Users/christopher/Uni/NOSQL/NOSQLProject/client/src/app/components/register/register.component.html","/Users/christopher/Uni/NOSQL/NOSQLProject/client/src/app/components/register/register.component.ts","/Users/christopher/Uni/NOSQL/NOSQLProject/client/src/app/models/channel.ts","/Users/christopher/Uni/NOSQL/NOSQLProject/client/src/app/models/message.ts","/Users/christopher/Uni/NOSQL/NOSQLProject/client/src/app/models/user.ts","/Users/christopher/Uni/NOSQL/NOSQLProject/client/src/app/services/authentication-guard.service.ts","/Users/christopher/Uni/NOSQL/NOSQLProject/client/src/app/services/authentication.service.ts","/Users/christopher/Uni/NOSQL/NOSQLProject/client/src/app/services/rest-service.service.ts","/Users/christopher/Uni/NOSQL/NOSQLProject/client/src/main.ts","ws (ignored)"],"names":[],"mappings":"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","file":"main.bundle.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncatched exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tthrow new Error(\"Cannot find module '\" + req + \"'.\");\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"../../../../../src/$$_gendir lazy recursive\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/christopher/Uni/NOSQL/NOSQLProject/client/src/$$_gendir lazy\n// module id = ../../../../../src/$$_gendir lazy recursive\n// module chunks = main","import { BrowserModule } from '@angular/platform-browser';\nimport { RouterModule } from '@angular/router';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { ModalModule } from 'ng2-modal';\nimport { ROUTE_CONFIG } from './app.route';\nimport { HttpModule } from '@angular/http';\nimport { AppComponent } from './components/app.component';\nimport { HomeComponent } from './components/home/home.component';\nimport { LoginComponent } from './components/login/login.component';\nimport { RegisterComponent } from './components/register/register.component';\nimport { ChatroomComponent } from './components/chatroom/chatroom.component';\nimport { AuthenticationService } from './services/authentication.service';\nimport { AppGuardService } from './services/authentication-guard.service';\nimport { ChatroomGuardService } from './services/authentication-guard.service';\nimport { RestService } from './services/rest-service.service';\nimport { CreateChannelComponent } from './components/modals/create-channel.component';\nimport { User } from './models/user';\nimport { Channel } from './models/channel';\n\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    HomeComponent,\n    LoginComponent,\n    RegisterComponent,\n    ChatroomComponent,\n    CreateChannelComponent\n  ],\n  imports: [\n    BrowserModule,\n    FormsModule,\n    ModalModule,\n    HttpModule,\n    RouterModule.forRoot(ROUTE_CONFIG)\n  ],\n  providers: [AuthenticationService, AppGuardService, ChatroomGuardService, RestService],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n\n\n\n// WEBPACK FOOTER //\n// /Users/christopher/Uni/NOSQL/NOSQLProject/client/src/app/app.module.ts","import { Routes, RouterModule } from '@angular/router';\r\nimport { HomeComponent } from './components/home/home.component';\r\nimport { RegisterComponent } from './components/register/register.component';\r\nimport { LoginComponent } from './components/login/login.component';\r\nimport { ChatroomComponent } from './components/chatroom/chatroom.component';\r\nimport { AppGuardService } from './services/authentication-guard.service';\r\nimport { ChatroomGuardService } from './services/authentication-guard.service';\r\n\r\nexport const ROUTE_CONFIG: Routes = [\r\n    {\r\n        path: 'home',\r\n        component: HomeComponent,\r\n        canActivate: [AppGuardService]\r\n    },{\r\n        path: 'login', \r\n        component: LoginComponent,\r\n        canActivate: [AppGuardService]\r\n    },\r\n    {\r\n        path: 'register',\r\n        component: RegisterComponent,\r\n        canActivate: [AppGuardService]\r\n    },\r\n    {\r\n        path: 'chatroom',\r\n        component: ChatroomComponent,\r\n        canActivate: [ChatroomGuardService]\r\n    },\r\n    { \r\n        path: '',\r\n        redirectTo: 'home',\r\n        pathMatch: 'full'\r\n    }\r\n];\n\n\n// WEBPACK FOOTER //\n// /Users/christopher/Uni/NOSQL/NOSQLProject/client/src/app/app.route.ts","module.exports = \"<div id=\\\"wrapper\\\">\\r\\n    <div id=\\\"header\\\">\\r\\n      <a href=\\\"./home\\\" class=\\\"logo\\\"></a>\\r\\n\\r\\n      <div class=\\\"content\\\">\\r\\n        <div class=\\\"inner\\\">\\r\\n          <router-outlet></router-outlet>\\r\\n        </div>\\r\\n      </div>\\r\\n      <nav>\\r\\n        <ul>\\r\\n          <li *ngIf=\\\"!isLoggedIn()\\\"><a [routerLink]=\\\"['login']\\\">Einloggen</a></li>\\r\\n          <li *ngIf=\\\"!isLoggedIn()\\\"><a [routerLink]=\\\"['register']\\\">Registrieren</a></li>\\r\\n          <li *ngIf=\\\"isLoggedIn()\\\"><a style=\\\"cursor:pointer\\\" [routerLink]=\\\"['home']\\\" (click)=\\\"logout()\\\">Ausloggen</a></li>\\r\\n        </ul>\\r\\n      </nav>\\r\\n    </div>\\r\\n  </div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/christopher/Uni/NOSQL/NOSQLProject/client/src/app/components/app.component.html\n// module id = ../../../../../src/app/components/app.component.html\n// module chunks = main","import { Component } from '@angular/core';\r\nimport { AuthenticationService } from '../services/authentication.service'\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: \"./app.component.html\"\r\n})\r\nexport class AppComponent {\r\n\r\n  public constructor(private _authenticationService: AuthenticationService) { }\r\n\r\n  private isLoggedIn() {\r\n    return this._authenticationService.isLoggedIn();\r\n  }\r\n\r\n  private logout() {\r\n    this._authenticationService.logout();\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// /Users/christopher/Uni/NOSQL/NOSQLProject/client/src/app/components/app.component.ts","exports = module.exports = require(\"../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"#chatroom_channels{\\r\\n    height: 100%;\\r\\n    border-right: 1px solid white;\\r\\n}\\r\\n\\r\\n#chatroom_channels label{\\r\\n    text-align: left;\\r\\n    margin-bottom: 0;\\r\\n    cursor: pointer;\\r\\n}\\r\\n\\r\\n.chatroom_channel {\\r\\n    margin-bottom: 15px;\\r\\n    display: -webkit-box;\\r\\n    display: -ms-flexbox;\\r\\n    display: flex;\\r\\n    width: 100%;\\r\\n    -webkit-box-align: center;\\r\\n        -ms-flex-align: center;\\r\\n            align-items: center;\\r\\n    padding: 5px;\\r\\n}\\r\\n\\r\\n.chatroom_channel_image{\\r\\n    width: 2.5rem;\\r\\n    height: 2.5rem;\\r\\n    border: solid 1px #ffffff;\\r\\n    border-radius: 100%;\\r\\n    background-size: contain;\\r\\n    cursor: pointer;\\r\\n}\\r\\n\\r\\n#public_channel, #private_channel{\\r\\n    height: 50%;\\r\\n    padding-top: 15px;\\r\\n    padding-bottom: 15px;\\r\\n}\\r\\n\\r\\n#chatroom_chat{\\r\\n    height: 100%;\\r\\n}\\r\\n\\r\\n#conversation{\\r\\n  overflow-y:scroll;\\r\\n}\\r\\n\\r\\n#chatroom_chat_messages {\\r\\n    background-color: #c1dde6;\\r\\n    border-radius: 5px;\\r\\n    padding: 10px;\\r\\n    margin: 5px;\\r\\n    color: black;\\r\\n    text-align: left;\\r\\n    word-wrap: break-word;\\r\\n}\\r\\n\\r\\n#chatroom_chat_input{\\r\\n    height: 50px;\\r\\n    border-left: 0;\\r\\n    border-right: 0;\\r\\n    border-bottom: 0;\\r\\n    border-top: 1px solid white;\\r\\n    border-radius: 0;\\r\\n    background-color: grey;\\r\\n    overflow: hidden;\\r\\n    background-color: #373737;\\r\\n}\\r\\n\\r\\n#chatroom_chat_input:focus{\\r\\n    outline: none;\\r\\n    box-shadow: 0 0 0 0;\\r\\n}\\r\\n\\r\\n#messsagefield{\\r\\n    text-align: left;\\r\\n}\\r\\n\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/christopher/Uni/NOSQL/NOSQLProject/client/src/app/components/chatroom/chatroom.component.css\n// module id = ../../../../../src/app/components/chatroom/chatroom.component.css\n// module chunks = main","module.exports = \"<div class=\\\"col-xs-12\\\" style=\\\"height:500px;width:1000px;margin:-3rem -2rem\\\">\\n  <div class=\\\"row\\\" style=\\\"height:100%\\\">\\n    <div class=\\\"col-xs-4\\\" id=\\\"chatroom_channels\\\">\\n\\n      <div class=\\\"row\\\" id=\\\"public_channel\\\">\\n        <label style=\\\"margin-bottom: 15px;\\\">ÖFFENTLICH</label>\\n        <div *ngFor=\\\"let channel of channels\\\">\\n          <div *ngIf=\\\"channel.isPublic\\\" [attr.id]=\\\"channel.name\\\" (click)=\\\"loadChannel(channel)\\\" class=\\\"chatroom_channel\\\"><img class=\\\"pull-left chatroom_channel_image\\\" /><label class=\\\"pull-left\\\">&nbsp;&nbsp;{{channel.name}}</label>&nbsp;</div>\\n        </div>\\n      </div>\\n\\n      <div class=\\\"row\\\" id=\\\"private_channel\\\">\\n        <label style=\\\"margin-bottom: 15px;\\\">Privat</label>\\n        <div *ngFor=\\\"let channel of channels\\\">\\n          <div *ngIf=\\\"!channel.isPublic\\\" [attr.id]=\\\"channel.name\\\" (click)=\\\"loadChannel(channel)\\\" class=\\\"chatroom_channel\\\"><img class=\\\"pull-left chatroom_channel_image\\\" /><label class=\\\"pull-left\\\">&nbsp;&nbsp;{{channel.name}}</label>&nbsp;</div>\\n        </div>\\n      </div>\\n\\n    </div>\\n\\n    <div class=\\\"col-xs-8\\\" id=\\\"chatroom_chat\\\">\\n      <div id=\\\"conversation\\\" class=\\\"row\\\" style=\\\"height:90%\\\">\\n        <label style=\\\"margin-top:15px\\\">{{activeChannel?.name}}</label>\\n        <div *ngFor=\\\"let message of activeChannel?.conversation\\\" [ngClass]=\\\"{'col-xs-6': true, 'pull-left': !isOwnMessage(message), 'pull-right': isOwnMessage(message)}\\\" id=\\\"chatroom_chat_messages\\\">\\n          <span *ngIf=\\\"!isOwnMessage(message) && message.status == 'read'\\\" class=\\\"fa fa-check\\\"></span>\\n          <span id=\\\"userfield\\\" style=\\\"font-weight:bold\\\">{{message.sender.username}}</span>\\n          <span id=\\\"messsagefield\\\" >{{message.message}}</span>\\n          <span id=\\\"timeField\\\"></span>\\n        </div>\\n      </div>\\n\\n      <div class=\\\"row\\\" style=\\\"height:10%\\\">\\n        <input placeholder=\\\"Schreibe eine Nachricht...\\\" [(ngModel)]=\\\"message\\\" (keypress)=\\\"keypressHandler($event)\\\" class=\\\"col-xs-10\\\"\\n          id=\\\"chatroom_chat_input\\\" />\\n        <button (click)=\\\"send()\\\" type=\\\"submit\\\" class=\\\"col-xs-2 btn waves-effect waves-light s2\\\" style=\\\"height:100%\\\" name=\\\"action\\\">Senden</button>\\n      </div>\\n    </div>\\n\\n  </div>\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/christopher/Uni/NOSQL/NOSQLProject/client/src/app/components/chatroom/chatroom.component.html\n// module id = ../../../../../src/app/components/chatroom/chatroom.component.html\n// module chunks = main","import { Component } from '@angular/core';\r\nimport { CreateChannelComponent } from '../modals/create-channel.component';\r\nimport * as io from \"socket.io-client\";\r\nimport { Channel } from '../../models/channel';\r\nimport { Message } from '../../models/message';\r\nimport { User } from '../../models/user';\r\nimport { AuthenticationService } from '../../services/authentication.service';\r\nimport { RestService } from '../../services/rest-service.service'\r\n\r\n@Component({\r\n    moduleId: module.id,\r\n    selector: 'chatroom',\r\n    templateUrl: './chatroom.component.html',\r\n    styleUrls: ['chatroom.component.css']\r\n})\r\nexport class ChatroomComponent {\r\n    channels: Channel [];\r\n    activeChannel: Channel;\r\n    message: String = \"\";\r\n    socket = null;\r\n\r\n    constructor(private _authenticationService: AuthenticationService, private _restService: RestService) {}\r\n\r\n    ngOnInit() {\r\n        this.socket = io('http://localhost:8000');\r\n        this.socket.on('message', function (data) {\r\n            console.log(data);\r\n            this.conversation.push(data);\r\n        }.bind(this));\r\n\r\n        this.channels = new Array();\r\n\r\n\r\n        let conversation: Array<Message> = [];\r\n        conversation.push(new Message(new User(\"Chrsitopher\", \"1111\"), \"Hey alles senkrecht?\", \"read\"));\r\n        conversation.push(new Message(new User(\"Chrsitopher\", \"1111\"), \"Wurst?\", \"read\"));\r\n        conversation.push(new Message(new User(\"Chrsitopher\", \"1111\"), \"Natürlicher Mergesort!\", \"read\"));\r\n        conversation.push(new Message(new User(\"Hamid\", \"2222\"), \"Hallo Hasan Halloooooooooooooooooooooooooooooooooooooooooo\", \"read\"));\r\n\r\n        this.channels.push(new Channel(1,\"General\",conversation,true));\r\n        this.channels.push(new Channel(2,\"Public\",conversation,true));\r\n\r\n\r\n    }\r\n\r\n    loadChannel(activeChannel: Channel) {\r\n        this.activeChannel = activeChannel;\r\n\r\n        for(let channel of this.channels){\r\n            document.getElementById(channel.name).style.backgroundColor = \"transparent\";\r\n        }\r\n        document.getElementById(activeChannel.name).style.backgroundColor = \"#373737\";\r\n    }\r\n\r\n    send() {\r\n        this.socket.emit('message', {\r\n            'message': new Message(new User(\"Chrsitopher\", \"1111\"), this.message, \"read\" )\r\n        });\r\n    }\r\n\r\n    isOwnMessage(message: Message): boolean {\r\n        return this._authenticationService.getUser().username.toLowerCase() == message.sender.username.toLowerCase();\r\n    }\r\n\r\n    // send message on enter\r\n    keypressHandler(event) {\r\n        if (event.keyCode === 13) {\r\n            this.send();\r\n        }\r\n    }\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// /Users/christopher/Uni/NOSQL/NOSQLProject/client/src/app/components/chatroom/chatroom.component.ts","exports = module.exports = require(\"../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/christopher/Uni/NOSQL/NOSQLProject/client/src/app/components/home/home.component.css\n// module id = ../../../../../src/app/components/home/home.component.css\n// module chunks = main","module.exports = \"<h1>Hs Mannheim Chatroom</h1>\\n<p>Chatte mit Kommilitonen an der Hochschule Mannheim</p>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/christopher/Uni/NOSQL/NOSQLProject/client/src/app/components/home/home.component.html\n// module id = ../../../../../src/app/components/home/home.component.html\n// module chunks = main","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})\nexport class HomeComponent {\n\n  \n}\n\n\n\n// WEBPACK FOOTER //\n// /Users/christopher/Uni/NOSQL/NOSQLProject/client/src/app/components/home/home.component.ts","exports = module.exports = require(\"../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/christopher/Uni/NOSQL/NOSQLProject/client/src/app/components/login/login.component.css\n// module id = ../../../../../src/app/components/login/login.component.css\n// module chunks = main","module.exports = \"<div style=\\\"width:400px\\\">\\r\\n    <p class=\\\"title\\\">\\r\\n        Um die Chatfunktion nutzen zu können musst du eingeloggt sein.\\r\\n    </p>\\r\\n    <div>\\r\\n        <div class=\\\"row\\\">\\r\\n            <div class=\\\"input-field\\\">\\r\\n                <input [(ngModel)]=\\\"username\\\" id=\\\"email\\\" type=\\\"text\\\" validate>\\r\\n                <label for=\\\"username\\\">Benutzername</label>\\r\\n            </div>\\r\\n        </div>\\r\\n\\r\\n        <div class=\\\"row\\\">\\r\\n            <div class=\\\"input-field\\\">\\r\\n                <input [(ngModel)]=\\\"password\\\" id=\\\"password\\\" type=\\\"password\\\" class=\\\"validate\\\">\\r\\n                <label for=\\\"password\\\">Passwort</label>\\r\\n            </div>\\r\\n        </div>\\r\\n\\r\\n        <button (click)=\\\"login()\\\" type=\\\"submit\\\" name=\\\"action\\\">Login</button>\\r\\n        <br><br>\\r\\n        <p *ngIf=\\\"error\\\" style=\\\"margin-bottom:0; color:#bb2b2b\\\">Login fehlgeschlagen.</p>\\r\\n    </div>\\r\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/christopher/Uni/NOSQL/NOSQLProject/client/src/app/components/login/login.component.html\n// module id = ../../../../../src/app/components/login/login.component.html\n// module chunks = main","import { Component, ElementRef } from '@angular/core';\r\nimport { AuthenticationService } from '../../services/authentication.service';\r\nimport { User } from '../../models/user';\r\nimport { Router } from '@angular/router';\r\n\r\n@Component({\r\n    selector: 'login',\r\n    templateUrl: './login.component.html',\r\n    styleUrls: ['./login.component.css']\r\n})\r\n\r\nexport class LoginComponent {\r\n\r\n    private username: string = \"\";\r\n    private password: string = \"\";\r\n    private error: boolean = false;\r\n\r\n    public constructor(private _service: AuthenticationService, private _router: Router) { }\r\n\r\n    private login() {\r\n        if (!this._service.login(new User(this.username, this.password))) {\r\n            this.error = !this.error;\r\n        } else {\r\n            this._router.navigate([\"chatroom\"]);\r\n        }\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// /Users/christopher/Uni/NOSQL/NOSQLProject/client/src/app/components/login/login.component.ts","module.exports = \"<button (click)=\\\"myModal.open()\\\"><i class=\\\"fa fa-plus\\\"></i></button>\\r\\n<modal #myModal>\\r\\n    <modal-header>\\r\\n        <h1>Modal header</h1>\\r\\n    </modal-header>\\r\\n    <modal-content>\\r\\n        Hello Modal!\\r\\n    </modal-content>\\r\\n    <modal-footer>\\r\\n      <button class=\\\"btn btn-primary\\\" (click)=\\\"myModal.close()\\\">&times;</button>\\r\\n    </modal-footer>\\r\\n</modal>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/christopher/Uni/NOSQL/NOSQLProject/client/src/app/components/modals/create-channel.component.html\n// module id = ../../../../../src/app/components/modals/create-channel.component.html\n// module chunks = main","import { Component } from '@angular/core';\r\nimport { ModalModule } from 'ng2-modal';\r\n\r\n@Component({\r\n    moduleId: module.id,\r\n    selector: 'create-channel-modal',\r\n    templateUrl: './create-channel.component.html',\r\n    styleUrls: ['modal.component.css']\r\n})\r\nexport class CreateChannelComponent {\r\n\r\n}\n\n\n// WEBPACK FOOTER //\n// /Users/christopher/Uni/NOSQL/NOSQLProject/client/src/app/components/modals/create-channel.component.ts","exports = module.exports = require(\"../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/christopher/Uni/NOSQL/NOSQLProject/client/src/app/components/modals/modal.component.css\n// module id = ../../../../../src/app/components/modals/modal.component.css\n// module chunks = main","exports = module.exports = require(\"../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/christopher/Uni/NOSQL/NOSQLProject/client/src/app/components/register/register.component.css\n// module id = ../../../../../src/app/components/register/register.component.css\n// module chunks = main","module.exports = \"<div style=\\\"width:400px\\\">\\r\\n    <p class=\\\"title\\\">\\r\\n        Registriere dich im HS Mannheim Chatroom.\\r\\n    </p>\\r\\n    <div>\\r\\n        <div class=\\\"row\\\">\\r\\n            <div class=\\\"input-field\\\">\\r\\n                <input [(ngModel)]=\\\"user.username\\\" id=\\\"email\\\" type=\\\"text\\\" validate>\\r\\n                <label for=\\\"username\\\">Benutzername</label>\\r\\n            </div>\\r\\n        </div>\\r\\n\\r\\n        <div class=\\\"row\\\">\\r\\n            <div class=\\\"input-field\\\">\\r\\n                <input [(ngModel)]=\\\"user.password\\\" id=\\\"password\\\" type=\\\"password\\\" class=\\\"validate\\\">\\r\\n                <label for=\\\"password\\\">Passwort</label>\\r\\n            </div>\\r\\n        </div>\\r\\n\\r\\n        <button (click)=\\\"register()\\\" type=\\\"submit\\\" name=\\\"action\\\">Registrieren</button>\\r\\n        <br><br>\\r\\n        <p *ngIf=\\\"error\\\" style=\\\"margin-bottom:0; color:#bb2b2b\\\">Login fehlgeschlagen.</p>\\r\\n    </div>\\r\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/christopher/Uni/NOSQL/NOSQLProject/client/src/app/components/register/register.component.html\n// module id = ../../../../../src/app/components/register/register.component.html\n// module chunks = main","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'register',\r\n  templateUrl: './register.component.html',\r\n  styleUrls: ['./register.component.css']\r\n})\r\nexport class RegisterComponent {\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// /Users/christopher/Uni/NOSQL/NOSQLProject/client/src/app/components/register/register.component.ts","import {Message} from './message'\r\n\r\nexport class Channel {\r\n\r\n    constructor(private _id: number, private _name: string, private _conversation: Message[], private _isPublic: boolean) {}\r\n\r\n    public get id() {\r\n        return this._id;\r\n    }\r\n\r\n    public get name() {\r\n        return this._name;\r\n    }\r\n\r\n    public get conversation() {\r\n        return this._conversation;\r\n    }\r\n\r\n    public get isPublic(){\r\n        return this._isPublic;\r\n    }\r\n}\r\n    \n\n\n// WEBPACK FOOTER //\n// /Users/christopher/Uni/NOSQL/NOSQLProject/client/src/app/models/channel.ts","import { User } from './user';\r\n\r\nexport class Message { \r\n\r\n    constructor(private _sender: User, private _message: String, private _status: String) {}\r\n\r\n    public get sender(): User {\r\n        return this._sender;\r\n    }\r\n\r\n    public get message(): String {\r\n        return this._message;\r\n    }\r\n\r\n    public get status() : String {\r\n        return this._status;\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// /Users/christopher/Uni/NOSQL/NOSQLProject/client/src/app/models/message.ts","export class User {\r\n\r\n    private _imageHref: String;\r\n\r\n    constructor(private _username: String, private _password: String) {\r\n        this._imageHref = \"C:/Entwicklung/SVN/nosql/chatapp/src/assets/images/usericon.png\";\r\n    }\r\n\r\n    public get username(): String {\r\n        return this._username;\r\n    }\r\n\r\n    public get password(): String {\r\n        return this._password;\r\n    }\r\n\r\n    public get imageHref() : String {\r\n        return this._imageHref;\r\n    }\r\n\r\n    public set imageHref(imageHref: String) {\r\n        this._imageHref = imageHref;\r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// /Users/christopher/Uni/NOSQL/NOSQLProject/client/src/app/models/user.ts","import { Injectable } from '@angular/core';\r\nimport {\r\n    CanActivate,\r\n    ActivatedRouteSnapshot,\r\n    RouterStateSnapshot\r\n} from '@angular/router';\r\nimport { Router } from '@angular/router';\r\nimport { AuthenticationService } from './authentication.service';\r\n\r\n@Injectable()\r\nexport class AppGuardService implements CanActivate {\r\n\r\n    constructor(private _authenticationService: AuthenticationService, private _router: Router) { }\r\n\r\n    canActivate(): boolean {\r\n        if(this._authenticationService.isLoggedIn()){\r\n            this._router.navigate([\"chatroom\"]);\r\n            return false;\r\n        }\r\n\r\n        return true;\r\n    }\r\n}\r\n\r\n@Injectable()\r\nexport class ChatroomGuardService implements CanActivate {\r\n\r\n    constructor(private _authenticationService: AuthenticationService, private _router: Router) { }\r\n\r\n    canActivate(): boolean {\r\n        if(!this._authenticationService.isLoggedIn()){\r\n            this._router.navigate([\"home\"]);\r\n            return false;\r\n        }\r\n\r\n        return true;\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// /Users/christopher/Uni/NOSQL/NOSQLProject/client/src/app/services/authentication-guard.service.ts","import { Injectable } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { User } from '../models/user';\r\n\r\n@Injectable()\r\nexport class AuthenticationService {\r\n\r\n    private users = [\r\n        new User(\"admin\", \"admin\"),\r\n        new User(\"hamid\", \"hamid\")\r\n    ];\r\n\r\n    public constructor(private _router: Router) { \r\n\r\n    }\r\n\r\n    public logout() {\r\n        localStorage.removeItem(\"user\");\r\n    }\r\n\r\n    public login(user) {\r\n        let authenticatedUser = this.users.find(u => u.username === user.username);\r\n        if (authenticatedUser && authenticatedUser.password === user.password) {\r\n            localStorage.setItem(\"user\", JSON.stringify(authenticatedUser));\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    public getUser(): User {\r\n        let user = JSON.parse(localStorage.getItem(\"user\"));\r\n        return new User(user._username, user._password);\r\n    }\r\n\r\n    public isLoggedIn(): boolean {\r\n        return localStorage.getItem(\"user\") != undefined || localStorage.getItem(\"user\") != null;\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// /Users/christopher/Uni/NOSQL/NOSQLProject/client/src/app/services/authentication.service.ts","import { Injectable } from '@angular/core';\r\nimport { Http, Response, Headers, RequestOptions, URLSearchParams } from '@angular/http';\r\nimport { Observable } from 'rxjs/Observable';\r\nimport 'rxjs/add/operator/catch';\r\nimport 'rxjs/add/operator/map';\r\nimport 'rxjs/add/observable/throw';\r\n\r\n\r\n@Injectable()\r\nexport class RestService {\r\n\r\n    constructor(private http: Http) { }\r\n\r\n    public get(path: string): Observable<any> {\r\n        return this.http.get(path)\r\n            .map(response => response.json().data)\r\n            .catch(this.handleError);\r\n    }\r\n\r\n    private handleError(error: any) {\r\n        console.error('An error occurred', error);\r\n        return Promise.reject(error.message || error);\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// /Users/christopher/Uni/NOSQL/NOSQLProject/client/src/app/services/rest-service.service.ts","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\nimport { AppModule } from './app/app.module';\nplatformBrowserDynamic().bootstrapModule(AppModule);\n\n\n\n// WEBPACK FOOTER //\n// /Users/christopher/Uni/NOSQL/NOSQLProject/client/src/main.ts","/* (ignored) */\n\n\n//////////////////\n// WEBPACK FOOTER\n// ws (ignored)\n// module id = 1\n// module chunks = main"],"sourceRoot":"webpack:///"}